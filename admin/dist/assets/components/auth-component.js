import{loginUser}from"../../api/login.js";class AuthComponent extends HTMLElement{connectedCallback(){this.mode="login",this.render()}render(){const e="login"===this.mode;this.innerHTML=`\n      <link rel="stylesheet" href="../styles/login.css">\n      <div class="container">\n        <div class="left"></div>\n        <div class="right">\n          <h2>${e?"SIGN IN":"REGISTER"}</h2>\n          <form id="auth-form">\n            <label>Username</label>\n            <input type="text" id="username" placeholder="Username" required />\n            <label>Password</label>\n            <input type="password" id="password" placeholder="Password" required />\n            <button type="submit">${e?"SIGN IN":"REGISTER"}</button>\n          </form>\n        </div>\n      </div>\n    `,this.querySelector("#auth-form").addEventListener("submit",this.handleAuth.bind(this)),this.querySelector("#toggle-mode").addEventListener("click",(t=>{t.preventDefault(),this.mode=e?"register":"login",this.render()}))}handleAuth(e){e.preventDefault();const t=this.querySelector("#username").value,n=this.querySelector("#password").value;"login"===this.mode&&loginUser({username:t,password:n}).then((e=>{console.log(e),e.accessToken?(localStorage.setItem("authToken",e.accessToken),localStorage.setItem("loggedInUser",t),alert("Login successful!"),window.location.href="index.html"):alert("Invalid username or password")})).catch((()=>alert("Server error")))}}customElements.define("auth-component",AuthComponent);